<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:c="http://www.springframework.org/schema/c" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.1.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
	<context:annotation-config />   <!--to activate annotation programming -->
	<tx:annotation-driven /> <!-- allow @Transactional for transaction on Repository -->

<!-- Start security  -->
	<security:global-method-security
		pre-post-annotations="enabled" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/resources/**" location="/resources/mytheme/" />
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->

	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- change the view path -->
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- Start Spring security -->
	
	
	<!--  End Spring Security -->
	
	
	
	
	


	<!-- Bean creation Start -->
	<beans:bean class="com.project.erp.common.util.logging.LoggerPostProcessor">
	</beans:bean>

	<beans:bean id="studentService"
		class="com.project.erp.serviceImpl.applicant.AbstractServiceImpl">
	</beans:bean>

	<!--beans:bean id="studentImp"
		class="com.project.erp.daoImpl.applicant.AbstractDaoImpl">
	</beans:bean-->
	
	
	
	
	



	<context:property-placeholder location="/WEB-INF/jdbc.properties" />

	<!-- To read properties files -->

	<beans:bean
		class="org.springframework.jdbc.datasource.DriverManagerDataSource"
		id="dataSource">
		<beans:property name="driverClassName" value="${jdbc.driverClassName}" />
		<beans:property name="url" value="${jdbc.url}" />
		<beans:property name="username" value="${jdbc.username}" />
		<beans:property name="password" value="${jdbc.password}" />
	</beans:bean>

	<!-- Session factory bean -->

	<beans:bean
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean" id="sessionFactory">
		<beans:property name="dataSource" ref="dataSource" />

		<!--beans:property name="configLocation"> <beans:value>classpath:hibernate.cfg.xml</beans:value> 
			</beans:property -->
		<beans:property name="packagesToScan">
			<beans:array>
				<beans:value>com.project.erp</beans:value>
			</beans:array>
		</beans:property>

		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">${jdbc.dialect}</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<!-- Transaction Manager -->
	
	
	<security:http auto-config="true">
	<security:intercept-url pattern="/login" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
	<security:intercept-url pattern="/loginfailed" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
	<security:intercept-url pattern="/logout" access="IS_AUTHENTICATED_ANONYMOUSLY"/>
		<security:form-login login-page="/login" authentication-failure-url="/loginfailed" default-target-url="/Dash-board" />
		<security:logout logout-success-url="/login" />
	</security:http>
	
	
	<security:authentication-manager>
		<security:authentication-provider user-service-ref="customUserService"/>
	</security:authentication-manager>

   <beans:bean id="customUserService" class="com.project.erp.support.gstian.examcell.CustomUserDetailsService"/>

	<beans:bean
		class="org.springframework.orm.hibernate4.HibernateTransactionManager"
		id="transactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>

	<!-- Transaction Manager -->

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

		<!-- setting maximum upload size -->
		<beans:property name="maxUploadSize" value="20000000" />

	</beans:bean>


      <beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <beans:property name="host" value="smtp.gmail.com" />
        <beans:property name="port" value="587" />
        <beans:property name="username" value="siesdevelopers@gmail.com" />
        <beans:property name="password" value="siesdev123@" />
        <beans:property name="javaMailProperties">
            <beans:props>
                <beans:prop key="mail.transport.protocol">smtp</beans:prop>
                <beans:prop key="mail.smtp.auth">true</beans:prop>
                <beans:prop key="mail.smtp.starttls.enable">true</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>
    <beans:bean
        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <beans:property name="exceptionMappings">
            <beans:props>
                <beans:prop key="java.lang.Exception">Error</beans:prop>
            </beans:props>
        </beans:property>
    </beans:bean>   



	<context:component-scan base-package="com.project.erp" />

</beans:beans>